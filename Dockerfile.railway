# 使用官方Node.js运行时作为基础镜像
FROM node:18-alpine AS base

# 安装依赖
FROM base AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app

# 复制package文件
COPY package.json package-lock.json* ./
RUN npm ci

# 重新构建源码
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# 在构建时设置临时的DATABASE_URL以避免Prisma错误
ARG DATABASE_URL
ENV DATABASE_URL=${DATABASE_URL:-"mysql://user:password@localhost:3306/database"}

# 生成Prisma客户端
RUN npx prisma generate

# 构建应用
RUN npm run build

# 生产镜像
FROM base AS runner
WORKDIR /app

ENV NODE_ENV production

# 创建非root用户
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# 复制构建产物
COPY --from=builder /app/public ./public
COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/.next/static ./.next/static

# 复制Prisma相关文件
COPY --from=builder /app/prisma ./prisma
COPY --from=builder /app/node_modules/.prisma ./node_modules/.prisma

# 复制TailwindCSS相关文件
COPY --from=builder /app/node_modules/@tailwindcss ./node_modules/@tailwindcss
COPY --from=builder /app/node_modules/tailwindcss ./node_modules/tailwindcss

# 复制启动脚本
COPY --from=builder /app/scripts ./scripts

# 设置启动脚本权限
RUN chmod +x /app/scripts/start.sh

# 更改文件所有者
RUN chown -R nextjs:nodejs /app

USER nextjs

EXPOSE 3000

ENV PORT 3000
ENV HOSTNAME "0.0.0.0"

# 使用启动脚本
CMD ["/app/scripts/start.sh"] 